powerdata <- read.table("~/exdata1/household_power_consumption.txt", sep=";", header=TRUE, na.strings="?")
powerdata$timetemp <- paste(powerdata$Date, powerdata$Time)
powerdata$Time <- strptime(powerdata$timetemp, format = "%d/%m/%Y %H:%M:%S")
powerdata$Date <- as.Date(powerdata$Date, "%d/%m/%Y")
plot4data <- subset(powerdata, powerdata$Date =="2007-02-01" |powerdata$Date == "2007-02-02")
#Plot 4
png("~/exdata1/plot4.png", 480, 480)
par(mfrow=c(2,2))
par(bg=NA)
plot(plot4data$Time, plot4data$Global_active_power, typ="l", ylim=c(0, 8), ylab="Global Active Power (kilowatts)", xlab="")
plot(plot4data$Time, plot4data$Voltage, typ="l", ylab="Voltage", ylim=c(234, 246), xlab="datetime")
plot(plot4data$Time, plot4data$Sub_metering_1, type = "l", ylim = c(0,40),
ylab = "Energy Sub Metering", xlab="")
lines(plot4data$Time, plot4data$Sub_metering_2, col = "red")
lines(plot4data$Time, plot4data$Sub_metering_3, col = "blue")
legend("topright", bty="n", lty = 1, col = c("black", "red", "blue"), legend = c("Sub_metering_1","Sub_metering_2", "Sub_metering_3"))
plot(plot4data$Time, plot4data$Global_reactive_power, typ="l", ylim=c(0, 0.5), ylab="Global Reactive Power (kilowatts)", xlab="datetime")
dev.off()
# Download file, unzip and save it in folder "exdata1"
if (!file.exists("exdata1"))  { dir.create("exdata1")}
zipfile <- tempfile()
download.file("http://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip", zipfile)
unzip(zipfile, exdir = "exdata1")
# Read download file into dataset "powerdata" and convert respective variables into Time and Date formats
powerdata <- read.table("~/exdata1/household_power_consumption.txt", sep=";", header=TRUE, na.strings="?")
powerdata$timetemp <- paste(powerdata$Date, powerdata$Time)
powerdata$Time <- strptime(powerdata$timetemp, format = "%d/%m/%Y %H:%M:%S")
powerdata$Date <- as.Date(powerdata$Date, "%d/%m/%Y")
# Subsetting data into "plot3data" with only observations from the dates of 2007-02-01 and 2007-02-02
plot3data <- subset(powerdata, powerdata$Date =="2007-02-01" |powerdata$Date == "2007-02-02")
# Creating Plot 3 and save it PNG filep (plot3.png)
# with a width of 480 pixels and a height of 480 pixel
png("~/exdata1/plot3.png", 480, 480)
#Setting background of plot3 as transparent
# to match the original samples from Professor Peng)
par(bg=NA)
# Ploting the data from variables
# Sub_metering_1, Sub_metering_2, and Sub_metering_3 on the same plot
plot(plot3data$Time, plot3data$Sub_metering_1, type = "l", ylim = c(0,40),
ylab = "Energy Sub Metering", xlab="")
lines(plot3data$Time, plot3data$Sub_metering_2, col = "red")
lines(plot3data$Time, plot3data$Sub_metering_3, col = "blue")
# Creating the legend as shown in the original Plot 3
legend("topright", lty = 1, col = c("black", "red", "blue"), legend = c("Sub_metering_1","Sub_metering_2", "Sub_metering_3"))
dev.off()
# Download file, unzip and save it in folder "exdata1"
if (!file.exists("exdata1"))  { dir.create("exdata1")}
zipfile <- tempfile()
download.file("http://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip", zipfile)
unzip(zipfile, exdir = "exdata1")
# Read download file into dataset "powerdata" and
# convert respective variables into Time and Date formats
powerdata <- read.table("~/exdata1/household_power_consumption.txt", sep=";", header=TRUE, na.strings="?")
powerdata$timetemp <- paste(powerdata$Date, powerdata$Time)
powerdata$Time <- strptime(powerdata$timetemp, format = "%d/%m/%Y %H:%M:%S")
powerdata$Date <- as.Date(powerdata$Date, "%d/%m/%Y")
# Subsetting data into "plot4data" with only observations from the dates of 2007-02-01 and 2007-02-02
plot4data <- subset(powerdata, powerdata$Date =="2007-02-01" |powerdata$Date == "2007-02-02")
# Creating Plot 4 and save it PNG filep (plot4.png)
# with a width of 480 pixels and a height of 480 pixel
png("~/exdata1/plot4.png", 480, 480)
# Putting all four plots on the same page
par(mfrow=c(2,2))
#Setting background of plot4 as transparent
# to match the original samples from Professor Peng)
par(bg=NA)
# Creating the four plots as shown in the examples from Professor Peng
plot(plot4data$Time, plot4data$Global_active_power, typ="l", ylim=c(0, 8), ylab="Global Active Power (kilowatts)", xlab="")
plot(plot4data$Time, plot4data$Voltage, typ="l", ylab="Voltage", ylim=c(234, 246), xlab="datetime")
plot(plot4data$Time, plot4data$Sub_metering_1, type = "l", ylim = c(0,40),
ylab = "Energy Sub Metering", xlab="")
lines(plot4data$Time, plot4data$Sub_metering_2, col = "red")
lines(plot4data$Time, plot4data$Sub_metering_3, col = "blue")
legend("topright", bty="n", lty = 1, col = c("black", "red", "blue"), legend = c("Sub_metering_1","Sub_metering_2", "Sub_metering_3"))
plot(plot4data$Time, plot4data$Global_reactive_power, typ="l", ylim=c(0, 0.5), ylab="Global Reactive Power (kilowatts)", xlab="datetime")
dev.off()
# Download file, unzip and save it in folder "exdata1"
if (!file.exists("exdata1"))  { dir.create("exdata1")}
zipfile <- tempfile()
download.file("http://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip", zipfile)
unzip(zipfile, exdir = "exdata1")
# Read download file into dataset "powerdata" and
# convert respective variables into Time and Date formats
powerdata <- read.table("~/exdata1/household_power_consumption.txt", sep=";", header=TRUE, na.strings="?")
powerdata$timetemp <- paste(powerdata$Date, powerdata$Time)
powerdata$Time <- strptime(powerdata$timetemp, format = "%d/%m/%Y %H:%M:%S")
powerdata$Date <- as.Date(powerdata$Date, "%d/%m/%Y")
# Subsetting data into "plot1data" with only observations from the dates of 2007-02-01 and 2007-02-02
plot1data <- subset(powerdata, powerdata$Date =="2007-02-01" |powerdata$Date == "2007-02-02")
# Creating Plot 1 and save it PNG file (plot1.png)
png("~/exdata1/plot1.png", 480, 480)
#Setting background of plot4 as transparent
# to match the original samples from Professor Peng)
par(bg=NA)
# Creating histogram for variabel Global_active_power
hist(plot1data$Global_active_power, main="Global Active Power", col="Red", ylim=c(0, 1200), xlab="Global Active Power (kilowatts)")
dev.off()
# Download file, unzip and save it in folder "exdata1"
if (!file.exists("exdata1"))  { dir.create("exdata1")}
zipfile <- tempfile()
download.file("http://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip", zipfile)
unzip(zipfile, exdir = "exdata1")
# Read downloaded file into dataset "powerdata" and
# convert respective variables into Time and Date formats
powerdata <- read.table("~/exdata1/household_power_consumption.txt", sep=";", header=TRUE, na.strings="?")
powerdata$timetemp <- paste(powerdata$Date, powerdata$Time)
powerdata$Time <- strptime(powerdata$timetemp, format = "%d/%m/%Y %H:%M:%S")
powerdata$Date <- as.Date(powerdata$Date, "%d/%m/%Y")
# Subset data into "plot1data" with only observations from the dates of 2007-02-01 and 2007-02-02
plot2data <- subset(powerdata, powerdata$Date =="2007-02-01" |powerdata$Date == "2007-02-02")
# Create Plot 1 and save it PNG file (plot1.png)
png("~/exdata1/plot2.png", 480, 480)
# Set background of plot2 as transparent
# to match the original samples from Professor Peng)
par(bg=NA)
# Create plot for variable Global_active_power
plot(plot2data$Time, plot2data$Global_active_power, typ="l", ylim= c(0, 8), ylab="Global Active Power (kilowatts)", xlab="")
dev.off()
# Downloading file, unzipping and saving it in folder "exdata1"
if (!file.exists("exdata1"))  { dir.create("exdata1")}
zipfile <- tempfile()
download.file("http://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip", zipfile)
unzip(zipfile, exdir = "exdata1")
# Reading downloaded file into dataset "powerdata" and
# converting respective variables into Time and Date formats
powerdata <- read.table("~/exdata1/household_power_consumption.txt", sep=";", header=TRUE, na.strings="?")
powerdata$timetemp <- paste(powerdata$Date, powerdata$Time)
powerdata$Time <- strptime(powerdata$timetemp, format = "%d/%m/%Y %H:%M:%S")
powerdata$Date <- as.Date(powerdata$Date, "%d/%m/%Y")
# Subsetting data into "plot4data" with only observations from the dates of 2007-02-01 and 2007-02-02
plot4data <- subset(powerdata, powerdata$Date =="2007-02-01" |powerdata$Date == "2007-02-02")
# Creating Plot 4 and save it PNG file (plot4.png)
# with a width of 480 pixels and a height of 480 pixel
png("~/exdata1/plot4.png", 480, 480)
# Putting all four plots on the same page
par(mfrow=c(2,2))
#Setting background of plot4 as transparent
# to match the original samples from Professor Peng)
par(bg=NA)
# Creating the four plots as shown in the examples from Professor Peng
plot(plot4data$Time, plot4data$Global_active_power, typ="l", ylim=c(0, 8), ylab="Global Active Power (kilowatts)", xlab="")
plot(plot4data$Time, plot4data$Voltage, typ="l", ylab="Voltage", ylim=c(230, 246), xlab="datetime")
plot(plot4data$Time, plot4data$Sub_metering_1, type = "l", ylim = c(0,40),
ylab = "Energy Sub Metering", xlab="")
lines(plot4data$Time, plot4data$Sub_metering_2, col = "red")
lines(plot4data$Time, plot4data$Sub_metering_3, col = "blue")
legend("topright", bty="n", lty = 1, col = c("black", "red", "blue"), legend = c("Sub_metering_1","Sub_metering_2", "Sub_metering_3"))
plot(plot4data$Time, plot4data$Global_reactive_power, typ="l", ylim=c(0, 0.5), ylab="Global Reactive Power (kilowatts)", xlab="datetime")
dev.off()
View(plot4data)
summary(plot4data)
png("~/exdata1/plot4.png", 480, 480)
# Putting all four plots on the same page
par(mfrow=c(2,2))
#Setting background of plot4 as transparent
# to match the original samples from Professor Peng)
par(bg=NA)
# Creating the four plots as shown in the examples from Professor Peng
plot(plot4data$Time, plot4data$Global_active_power, typ="l", ylim=c(0, 8), ylab="Global Active Power (kilowatts)", xlab="")
plot(plot4data$Time, plot4data$Voltage, typ="l", ylab="Voltage", ylim=c(233, 246), xlab="datetime")
plot(plot4data$Time, plot4data$Sub_metering_1, type = "l", ylim = c(0,40),
ylab = "Energy Sub Metering", xlab="")
lines(plot4data$Time, plot4data$Sub_metering_2, col = "red")
lines(plot4data$Time, plot4data$Sub_metering_3, col = "blue")
legend("topright", bty="n", lty = 1, col = c("black", "red", "blue"), legend = c("Sub_metering_1","Sub_metering_2", "Sub_metering_3"))
plot(plot4data$Time, plot4data$Global_reactive_power, typ="l", ylim=c(0, 0.5), ylab="Global Reactive Power (kilowatts)", xlab="datetime")
dev.off()
# Creating Plot 4 and save it PNG file (plot4.png)
# with a width of 480 pixels and a height of 480 pixel
png("~/exdata1/plot4.png", 480, 480)
# Putting all four plots on the same page
par(mfrow=c(2,2))
#Setting background of plot4 as transparent
# to match the original samples from Professor Peng)
par(bg=NA)
# Creating the four plots as shown in the examples from Professor Peng
plot(plot4data$Time, plot4data$Global_active_power, typ="l", ylim=c(0, 8), ylab="Global Active Power (kilowatts)", xlab="")
plot(plot4data$Time, plot4data$Voltage, typ="l", ylab="Voltage", ylim=c(233, 247), xlab="datetime")
plot(plot4data$Time, plot4data$Sub_metering_1, type = "l", ylim = c(0,40),
ylab = "Energy Sub Metering", xlab="")
lines(plot4data$Time, plot4data$Sub_metering_2, col = "red")
lines(plot4data$Time, plot4data$Sub_metering_3, col = "blue")
legend("topright", bty="n", lty = 1, col = c("black", "red", "blue"), legend = c("Sub_metering_1","Sub_metering_2", "Sub_metering_3"))
plot(plot4data$Time, plot4data$Global_reactive_power, typ="l", ylim=c(0, 0.5), ylab="Global Reactive Power (kilowatts)", xlab="datetime")
dev.off()
summary(plot2data)
# Download file, unzip and save it in folder "exdata1"
if (!file.exists("exdata1"))  { dir.create("exdata1")}
zipfile <- tempfile()
download.file("http://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip", zipfile)
unzip(zipfile, exdir = "exdata1")
# Read downloaded file into dataset "powerdata" and
# convert respective variables into Time and Date formats
powerdata <- read.table("~/exdata1/household_power_consumption.txt", sep=";", header=TRUE, na.strings="?")
powerdata$timetemp <- paste(powerdata$Date, powerdata$Time)
powerdata$Time <- strptime(powerdata$timetemp, format = "%d/%m/%Y %H:%M:%S")
powerdata$Date <- as.Date(powerdata$Date, "%d/%m/%Y")
# Subset data into "plot1data" with only observations from the dates of 2007-02-01 and 2007-02-02
plot2data <- subset(powerdata, powerdata$Date =="2007-02-01" |powerdata$Date == "2007-02-02")
# Create Plot 2 and save it PNG file (plot2.png)
png("~/exdata1/plot2.png", 480, 480)
# Set background of plot2 as transparent
# to match the original samples from Professor Peng)
par(bg=NA)
# Create plot for variable Global_active_power (adjusted the scale of Y-axis to 8 for readability)
plot(plot2data$Time, plot2data$Global_active_power, typ="l", ylim= c(0, 7.5), ylab="Global Active Power (kilowatts)", xlab="")
dev.off()
# Downloading file, unzipping and saving it in folder "exdata1"
if (!file.exists("exdata1"))  { dir.create("exdata1")}
zipfile <- tempfile()
download.file("http://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip", zipfile)
unzip(zipfile, exdir = "exdata1")
# Reading downloaded file into dataset "powerdata" and
# converting respective variables into Time and Date formats
powerdata <- read.table("~/exdata1/household_power_consumption.txt", sep=";", header=TRUE, na.strings="?")
powerdata$timetemp <- paste(powerdata$Date, powerdata$Time)
powerdata$Time <- strptime(powerdata$timetemp, format = "%d/%m/%Y %H:%M:%S")
powerdata$Date <- as.Date(powerdata$Date, "%d/%m/%Y")
# Subsetting data into "plot3data" with only observations from the dates of 2007-02-01 and 2007-02-02
plot3data <- subset(powerdata, powerdata$Date =="2007-02-01" |powerdata$Date == "2007-02-02")
# Creating Plot 3 and save it PNG file (plot3.png)
# with a width of 480 pixels and a height of 480 pixel
png("~/exdata1/plot3.png", 480, 480)
#Setting background of plot3 as transparent
# to match the original samples from Professor Peng)
par(bg=NA)
# Plotting the data from variables
# Sub_metering_1, Sub_metering_2, and Sub_metering_3 on the same plot
plot(plot3data$Time, plot3data$Sub_metering_1, type = "l", ylim = c(0,38),
ylab = "Energy Sub Metering", xlab="")
lines(plot3data$Time, plot3data$Sub_metering_2, col = "red")
lines(plot3data$Time, plot3data$Sub_metering_3, col = "blue")
# Creating the legend as shown in the original Plot 3
legend("topright", lty = 1, col = c("black", "red", "blue"), legend = c("Sub_metering_1","Sub_metering_2", "Sub_metering_3"))
dev.off()
# Downloading file, unzipping and saving it in folder "exdata1"
if (!file.exists("exdata1"))  { dir.create("exdata1")}
zipfile <- tempfile()
download.file("http://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip", zipfile)
unzip(zipfile, exdir = "exdata1")
# Reading downloaded file into dataset "powerdata" and
# converting respective variables into Time and Date formats
powerdata <- read.table("~/exdata1/household_power_consumption.txt", sep=";", header=TRUE, na.strings="?")
powerdata$timetemp <- paste(powerdata$Date, powerdata$Time)
powerdata$Time <- strptime(powerdata$timetemp, format = "%d/%m/%Y %H:%M:%S")
powerdata$Date <- as.Date(powerdata$Date, "%d/%m/%Y")
# Subsetting data into "plot4data" with only observations from the dates of 2007-02-01 and 2007-02-02
plot4data <- subset(powerdata, powerdata$Date =="2007-02-01" |powerdata$Date == "2007-02-02")
# Creating Plot 4 and save it PNG file (plot4.png)
# with a width of 480 pixels and a height of 480 pixel
png("~/exdata1/plot4.png", 480, 480)
# Putting all four plots on the same page
par(mfrow=c(2,2))
#Setting background of plot4 as transparent
# to match the original samples from Professor Peng)
par(bg=NA)
# Creating the four plots as shown in the examples from Professor Peng
# (except I adjusted the scale slightly for plots 1 and 3 to make the graphs more readable)
plot(plot4data$Time, plot4data$Global_active_power, typ="l", ylim=c(0, 7.5), ylab="Global Active Power", xlab="")
plot(plot4data$Time, plot4data$Voltage, typ="l", ylab="Voltage", ylim=c(233, 247), xlab="datetime")
plot(plot4data$Time, plot4data$Sub_metering_1, type = "l", ylim = c(0,38),
ylab = "Energy Sub Metering", xlab="")
lines(plot4data$Time, plot4data$Sub_metering_2, col = "red")
lines(plot4data$Time, plot4data$Sub_metering_3, col = "blue")
legend("topright", bty="n", lty = 1, col = c("black", "red", "blue"), legend = c("Sub_metering_1","Sub_metering_2", "Sub_metering_3"))
plot(plot4data$Time, plot4data$Global_reactive_power, typ="l", ylim=c(0, 0.5), ylab="Global Reactive Power (kilowatts)", xlab="datetime")
dev.off()
# Downloading file, unzipping and saving it in folder "exdata1"
if (!file.exists("exdata1"))  { dir.create("exdata1")}
zipfile <- tempfile()
download.file("http://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip", zipfile)
unzip(zipfile, exdir = "exdata1")
# Reading downloaded file into dataset "powerdata" and
# converting respective variables into Time and Date formats
powerdata <- read.table("~/exdata1/household_power_consumption.txt", sep=";", header=TRUE, na.strings="?")
powerdata$timetemp <- paste(powerdata$Date, powerdata$Time)
powerdata$Time <- strptime(powerdata$timetemp, format = "%d/%m/%Y %H:%M:%S")
powerdata$Date <- as.Date(powerdata$Date, "%d/%m/%Y")
# Subsetting data into "plot4data" with only observations from the dates of 2007-02-01 and 2007-02-02
plot4data <- subset(powerdata, powerdata$Date =="2007-02-01" |powerdata$Date == "2007-02-02")
# Creating Plot 4 and save it PNG file (plot4.png)
# with a width of 480 pixels and a height of 480 pixel
png("~/exdata1/plot4.png", 480, 480)
# Putting all four plots on the same page
par(mfrow=c(2,2))
#Setting background of plot4 as transparent
# to match the original samples from Professor Peng)
par(bg=NA)
# Creating the four plots as shown in the examples from Professor Peng
# (except I adjusted the scale slightly for plots 1 and 3 to make the graphs more readable)
plot(plot4data$Time, plot4data$Global_active_power, typ="l", ylim=c(0, 7.5), ylab="Global Active Power", xlab="")
plot(plot4data$Time, plot4data$Voltage, typ="l", ylab="Voltage", ylim=c(233, 247), xlab="datetime")
plot(plot4data$Time, plot4data$Sub_metering_1, type = "l", ylim = c(0,38),
ylab = "Energy Sub Metering", xlab="")
lines(plot4data$Time, plot4data$Sub_metering_2, col = "red")
lines(plot4data$Time, plot4data$Sub_metering_3, col = "blue")
legend("topright", bty="n", lty = 1, col = c("black", "red", "blue"), legend = c("Sub_metering_1","Sub_metering_2", "Sub_metering_3"))
plot(plot4data$Time, plot4data$Global_reactive_power, typ="l", ylim=c(0, 0.5), ylab="Global_Reactive_Power", xlab="datetime")
dev.off()
# Downloading file, unzipping and saving it in folder "exdata1"
if (!file.exists("exdata1"))  { dir.create("exdata1")}
zipfile <- tempfile()
download.file("http://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip", zipfile)
unzip(zipfile, exdir = "exdata1")
# Reading downloaded file into dataset "powerdata" and
# converting respective variables into Time and Date formats
powerdata <- read.table("~/exdata1/household_power_consumption.txt", sep=";", header=TRUE, na.strings="?")
powerdata$timetemp <- paste(powerdata$Date, powerdata$Time)
powerdata$Time <- strptime(powerdata$timetemp, format = "%d/%m/%Y %H:%M:%S")
powerdata$Date <- as.Date(powerdata$Date, "%d/%m/%Y")
# Subsetting data into "plot4data" with only observations from the dates of 2007-02-01 and 2007-02-02
plot4data <- subset(powerdata, powerdata$Date =="2007-02-01" |powerdata$Date == "2007-02-02")
# Creating Plot 4 and save it PNG file (plot4.png)
# with a width of 480 pixels and a height of 480 pixel
png("~/exdata1/plot4.png", 480, 480)
# Putting all four plots on the same page
par(mfrow=c(2,2))
#Setting background of plot4 as transparent
# to match the original samples from Professor Peng)
par(bg=NA)
# Creating the four plots as shown in the examples from Professor Peng
# (except I adjusted the scale slightly for plots 1 and 3 to make the graphs more readable)
plot(plot4data$Time, plot4data$Global_active_power, typ="l", ylim=c(0, 7.5), ylab="Global Active Power", xlab="")
plot(plot4data$Time, plot4data$Voltage, typ="l", ylab="Voltage", ylim=c(233, 247), xlab="datetime")
plot(plot4data$Time, plot4data$Sub_metering_1, type = "l", ylim = c(0,38),
ylab = "Energy Sub Metering", xlab="")
lines(plot4data$Time, plot4data$Sub_metering_2, col = "red")
lines(plot4data$Time, plot4data$Sub_metering_3, col = "blue")
legend("topright", bty="n", lty = 1, col = c("black", "red", "blue"), legend = c("Sub_metering_1","Sub_metering_2", "Sub_metering_3"))
plot(plot4data$Time, plot4data$Global_reactive_power, typ="l", ylim=c(0, 0.5), ylab="Global_reactive_power", xlab="datetime")
dev.off()
save.image("~/exdata1/submission (backup)/courseproject1.RData")
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
?splom
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(ggplot2)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(ggplot2)
g <- ggplot(movies, aes(votes, rating))
print(g)
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies) + geom_smooth()
?trellis.par.set()
?par()
?print.trellis
?panel.lmline()
?lines
?points()
text()
?text()
llines()
?llines()
?panel.lmlines()
?panel.lmlines
?panel.lmline
?trellis.par.set()
```{r time-series panel, fig.path='Figures/'}
---
title: "Reproducible Research: Peer Assignment #1"
output: html_document
---
## Assignment Overview
This assignment makes use of data from a personal activity monitoring device. This device collects data at 5 minute intervals through out the day. The data consists of two months of data from an anonymous individual collected during the months of October and November, 2012 and include the number of steps taken in 5 minute intervals each day.
The data for this assignment was downloaded from the course web site:
Dataset: Activity monitoring data
The variables included in this dataset are:
steps: Number of steps taking in a 5-minute interval (missing values are coded as NA)
date: The date on which the measurement was taken in YYYY-MM-DD format
interval: Identifier for the 5-minute interval in which measurement was taken
The dataset is stored in a comma-separated-value (CSV) file and there are a total of 17,568 observations in this dataset.
## Loading and Processing Data
```{r}
# Setting the proper directory to the folder "RepData_PeerAssessment1"
setwd("~/RepData_PeerAssessment1")
# Reading the data and converting variable "date" into "Date" format
activity <- read.csv(file="activity.csv", head=TRUE, sep=",")
activity$date <- as.Date(as.character(activity$date, format="%y-%m-%d"))
```
## What is mean total number of steps taken per day?
Before calculating the mean total number of steps taken per day, I first need to aggregate the total of steps taken on each day from the acitivty dataset:
```{r}
# Calculating the daily total of the number of steps taken
activity_sum <- aggregate(activity$steps, by=list(Day=activity$date), FUN=sum)
```
Then, I created a histogram to show the frequency distribution of observations by the daily total number of steps using the following codes. Professor Peng made a point to remind us the difference between a histogram and a barplot. Our friendly community TA helps us understand the difference in this course [discussion thread.](https://class.coursera.org/repdata-034/forum/thread?thread_id=27)
Note that I set the number of breaks to 10 for this specific histogram instead of using the default for the HIST command in R. Because of this, my historgram might look different from those created by other students.
```{r histogram, fig.path='Figures/'}
# Creating a histogram to show the frequency of observations by the daily total number of steps
hist(activity_sum$x, col="darkblue",
main="Frequency Distribution by Daily Total Number of Steps",
xlab="Total Number of Steps", ylab="Frequency", xlim=c(0, 22500), ylim=c(0, 15), breaks=10)
```
Finally, I calculated the measures of central tendency - the mean and the median - of the total number of steps per day.
```{r}
# Calculating the mean and median of the daily total number of steps
mean <- mean(activity_sum$x, na.rm=TRUE)
median <- median(activity_sum$x, na.rm=TRUE)
```
The mean and the medians are as follow:
```{r, echo=FALSE}
mean
median
```
## What is the average daily activity pattern?
In order to show the average daily activity pattern, I need to first calculate the mean number of steps from each time interval across the days within the period of the study (Oct. 1 to Nov. 30, 2012). I use the aggregate function for this task:
```{r}
# Plotting the Mean Number of Steps from Each Time Interval (aggregated across all days)
activity_interval <- aggregate(activity$steps, by=list(Interval=activity$interval), FUN=mean, na.rm=TRUE)
```
And then, I used the ggplot package to create the time-series plot to show the average daily acitivty pattern by time interval.
```{r time-series plot, fig.path='Figures/'}
library(ggplot2)
ggplot(activity_interval, aes(x=Interval, y=x)) + geom_line(color="darkgreen") +
labs(title="Average Daily Activity Pattern: Mean Steps by Time Interval") +
labs(x="Time Interval (All Days from Oct. 1 to Nov. 30, 2012)") + labs(y="Mean Number of Steps")
```
Now, I need to find the 5-minute interval that contains the maximum number of steps across all days.
```{r}
# Finding out what the maximum of the mean number of steps is
max_mean <- max(activity_interval$x, na.rm=TRUE)
```
The maximum number of steps is:
```{r, echo=FALSE}
max_mean
```
And, **the 5-minute interview that contains the maxium number of steps is:**
```{r}
activity_interval$Interval[activity_interval$x==max_mean]
```
## Imputing missing values
This data includes a considerable number of missing values. The number of observations can be obtained by using the following codes:
```{r}
# Calculating the number of cases with missing values
incomplete_case <- sum(!complete.cases(activity))
```
The number of observations that contain missing values (coded as NA) is:
```{r, echo=FALSE}
incomplete_case
```
I looked at the "activity" data set as well as some of the aggregated data created earlier for this assignment. I noticed that the missing values came from a number of days in which data on steps taken were completely missing. In order to preserve the variabilty of daily pattern of activity, I decided to use the mean step taken from each 5-minute time interval to subsitute for the missing value (NA) in which observation:
```{r}
# Creating a new data set "activity_nm" by substituting the mean value of steps by intervial for NA
activity_nm <- activity
interval_means <- aggregate(activity_nm$steps, by=list(Interval=activity$interval), FUN="mean", na.rm=TRUE)
colnames(interval_means)[colnames(interval_means)=="x"] <- "Interval_Mean"
for(interval in unique(activity_nm$interval)){
activity_nm$steps[activity_nm$interval==interval & is.na(activity_nm$steps)] <- mean(activity_nm$steps[activity_nm$interval==interval], na.rm=TRUE)
}
```
You can see what the new data set "activity_nm" looks like:
```{r, echo=FALSE}
head(activity_nm)
tail(activity_nm)
```
To be sure, let's check to see if all the NAs are gone in the new data set "activity_nm" using the following codes:
```{r}
# Calculating the number of cases with missing values
incomplete_case2 <- sum(!complete.cases(activity_nm))
```
After subsituting the NAs with the interval mean values, the number of observations that contain missing values in the new data set is now zero:
```{r}
incomplete_case2
```
We are asked to create a histogram of the total number of steps taken each day with the new data set:
```{r histogram with new data, fig.path='Figures/'}
# Calculating the daily total of the number of steps taken
activity_nm_sum <- aggregate(activity_nm$steps, by=list(Day=activity_nm$date), FUN=sum)
# Creating a histogram to show the frequency of observations by the daily total number of steps
hist(activity_nm_sum$x, col="red",
main="Daily Total Number of Steps (New Data Set with NAs Replaced)",
xlab="Total Number of Steps", ylab="Frequency", breaks=10)
```
And also to calculate the mean and median total number of steps taken per day.
```{r}
mean <- mean(activity_nm_sum$x, na.rm=FALSE)
median <- median(activity_nm_sum$x, na.rm=FALSE)
```
Here are the mean and the median respectively:
```{r, echo=FALSE}
mean
median
```
You might notice that the mean is actually the same as the mean obtained for the original dataset. The median, however, is slightly different.
## Are there differences in activity patterns between weekdays and weekends?
Now, we are in the last section of this assignment. We are asked to separate the data into weekdays and weekends so that we can compare their activity patterns. The following are the codes to perform this task:
```{r}
# Creating a new variable "activity_nm$week" from the "date" variable to indicate the day of the week
activity_nm$week <- "Weekday"
activity_nm$day <- weekdays(as.Date(activity_nm$date))
activity_nm$week[which(activity_nm$day=="Saturday")] <-"Weekend"
activity_nm$week[which(activity_nm$day=="Sunday")] <-"Weekend"
```
Next, I need to aggregate the data in order to obtain the mean steps taken in each 5-minute interval during weekends and weekdays through the duration of the observation period (Oct. 1 to Nov. 30, 2012):
```{r}
# Calculating the Mean Number of Steps in Each Time Interval (aggregated across all days)
activity_week <- aggregate(activity_nm$steps, by=list(Interval=activity_nm$interval, Day=activity_nm$week), FUN=mean, na.rm=TRUE)
```
And then, from the aggregated data, I used the ggplot package to create the panel plot that contains the two time-series charts for weekday and weekend respectively:
```{r time-series panel, fig.path='Figures/'}
library(ggplot2)
ggplot(activity_week, aes(x=Interval, y=x, fill=Day)) + geom_line(color="blue") +
labs(title="Average Daily Activity Pattern: Mean Steps by Time Interval") +
labs(x="Time Interval (All Days from Oct. 1 to Nov. 30, 2012)") + labs(y="Mean Number of Steps") +
facet_grid(.~ Day, scales="free", space="free")
```
**This concludes our Peer Assignment #1 for the Reproducible Research course. I hope I have made it clear to you the steps I went through to complete this assignment and the logic behind my decisions. Thank you very much for reviewing my assignment, and your feedback will be greatly appreciated!**
