# Setting the proper directory to the folder "RepData_PeerAssessment1"
setwd("~/RepData_PeerAssessment1")

# Reading the data and converting variable "date" into "Date" format
activity <- read.csv(file="activity.csv", head=TRUE, sep=",")
activity$date <- as.Date(as.character(activity$date, format="%y-%m-%d"))

# Calculating the daily total of the number of steps taken
activity_sum <- aggregate(activity$steps, by=list(Day=activity$date), FUN=sum)

# Creating a histogram to show the frequency of observations by the daily total number of steps
hist(activity_sum$x, col="darkblue", 
     main="Frequency Distribution by Daily Total Number of Steps", 
     xlab="Total Number of Steps", ylab="Frequency")

# Calculating the mean and median of the daily total number of steps
mean <- mean(activity_sum$x, na.rm=TRUE)
median <- median(activity_sum$x, na.rm=TRUE)
mean
median

# Plotting the Mean Number of Steps in Each Time Interval (aggregated across all days)
activity_interval <- aggregate(activity$steps, by=list(Interval=activity$interval), FUN=mean, na.rm=TRUE)
plot(activity_interval$x, type="l", col="magenta", 
     main="Average Daily Activity Pattern: Mean Steps by Time Interval", 
     xlab="Time Interval (All Days from Oct. 1 to Nov. 30, 2012)", ylab="Mean Number of Steps")
library(ggplot2)
ggplot(activity_interval, aes(x=Interval, y=x)) + geom_line() +
  labs(title="Average Daily Activity Pattern: Mean Steps by Time Interval") +
  labs(x="Time Interval (All Days from Oct. 1 to Nov. 30, 2012)") + labs(y="Mean Number of Steps")

# Finding out what the maximum of the mean number of steps is
max_interval <- max(activity_interval$x, na.rm=TRUE)
max_interval

# Calculating the number of cases with missing values
incomplete_case <- sum(!complete.cases(activity))
incomplete_case

# Creating a new data set "activity_nm" by substituting the mean value of steps by intervial for NA 
activity_nm <- activity
interval_means <- aggregate(activity_nm$steps, by=list(Interval=activity$interval), FUN="mean", na.rm=TRUE)
colnames(interval_means)[colnames(interval_means)=="x"] <- "Interval_Mean"
for(interval in unique(activity_nm$interval)){
  activity_nm$steps[activity_nm$interval==interval & is.na(activity_nm$steps)] <- mean(activity_nm$steps[activity_nm$interval==interval], na.rm=TRUE)
}

# Calculating the daily total of the number of steps taken
activity_nm_sum <- aggregate(activity_nm$steps, by=list(Day=activity_nm$date), FUN=sum)

# Creating a histogram to show the frequency of observations by the daily total number of steps
hist(activity_nm_sum$x, col="red", 
     main="Frequency Distribution by Daily Total Number of Steps (New Data Set with Replaced NAs)", 
     xlab="Total Number of Steps", ylab="Frequency")

# Calculating the mean and median of the daily total number of steps
mean <- mean(activity_nm_sum$x, na.rm=FALSE)
median <- median(activity_nm_sum$x, na.rm=FALSE)
mean 
median

# Creating a new variable "activity_nm$week" from the "date" variable to indicate the day of the week
activity_nm$week <- "Weekday"
activity_nm$day <- weekdays(as.Date(activity_nm$date))
activity_nm$week[which(activity_nm$day=="Saturday")] <-"Weekend" 
activity_nm$week[which(activity_nm$day=="Sunday")] <-"Weekend"
                                  
# Plotting the Mean Number of Steps in Each Time Interval (aggregated across all days)
activity_week <- aggregate(activity_nm$steps, by=list(Interval=activity_nm$interval, Day=activity_nm$week), FUN=mean, na.rm=TRUE)
library(ggplot2)
ggplot(activity_week, aes(x=Interval, y=x, fill=Day)) + geom_line(color="blue") +
     labs(title="Average Daily Activity Pattern: Mean Steps by Time Interval") +
     labs(x="Time Interval (All Days from Oct. 1 to Nov. 30, 2012)") + labs(y="Mean Number of Steps") +
    facet_grid(.~ Day, scales="free", space="free")
